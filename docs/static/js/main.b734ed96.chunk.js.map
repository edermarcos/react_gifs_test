{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","React","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","entities","type","value","onChange","event","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","map","id","title","image","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","deleteCategoryById","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","onClick","entity","GifExpertApp","categories","filter","cat","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC5B,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,sBAAMC,SAhBa,SAACC,GACpBA,EAAEC,iBAEGJ,EAAWK,SAQhBR,GAAY,SAAAS,GAAQ,OAAKN,GAAL,mBAAoBM,OACxCL,EAAc,MAId,SACE,uBAAOM,KAAK,OACLC,MAAQR,EACRS,SAAW,SAACC,GAAD,OAAWT,EAAcS,EAAMC,OAAOH,a,+BCzBjDI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KAHa,kBAKdA,EAAKC,KAAI,YAGd,MAAQ,CAAEC,GAHqD,EAA9CA,GAGHC,MAHiD,EAA1CA,MAGAC,MAH0C,EAAnCC,OAAUC,iBAC9BX,SANW,2CAAH,sDCEPY,EAAc,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACnC,OACE,sBAAKI,UAAU,OAAf,UACE,qBAAKC,IAAML,EAAQM,IAAMP,IACzB,4BAAKA,QCDEQ,EAAU,SAAC,GAAsC,IAApClB,EAAmC,EAAnCA,SAAUmB,EAAyB,EAAzBA,mBAClC,ECF0B,SAACnB,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAjB,GACJkB,YAAW,WACTH,EAAS,CACPf,OACAa,SAAS,MAEV,UAEN,CAACpB,IAEGqB,EDhB2BK,CAAa1B,GAAjCY,EAAd,EAAQL,KAAca,EAAtB,EAAsBA,QAEtB,OACE,gCACE,sBAAKL,UAAU,SAAf,UACE,4CAAgBf,KAEhB,8BACE,wBAAQ2B,QAAU,kBAAMR,EAAmBnB,IAA3C,yBAIFoB,GAAW,2CAEb,qBAAKL,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAoB,GAAM,OACf,cAAC,EAAD,eACkBA,GADCA,EAAOnB,aElBzBoB,EAAe,WAC1B,MAAkC3C,mBAAS,CAAC,SAA5C,mBAAO4C,EAAP,KAAmB9C,EAAnB,KAEMmC,EAAqB,SAACnB,GAC1BhB,EAAY,YAAI8C,EAAWC,QAAO,SAACC,GAAD,OAASA,IAAQhC,QAGrD,OACE,qCACE,gDACA,cAAC,EAAD,CAAahB,YAAcA,IAC3B,uBAGE8C,EAAWtB,KAAI,SAACR,GAAD,OACb,cAAC,EAAD,CACSA,SAAWA,EACXmB,mBAAqBA,GAFfnB,U,MCdzBiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b734ed96.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n  const [inputValue, setInputValue] = React.useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!inputValue.trim()) {\r\n      return;\r\n    }\r\n\r\n    /*\r\n     * Se recibe como parametro el setter desde el padre\r\n     * Por default, entites es el parametro que retorna y se crea un nuevo arreglo\r\n     * */\r\n    setCategory(entities => [inputValue, ...entities]);\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input type=\"text\"\r\n             value={ inputValue }\r\n             onChange={ (event) => setInputValue(event.target.value) }/>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategory: PropTypes.func.isRequired\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=FVuIHOLMhnq9M7IHkMQoY3EuDiz55ZwI`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  return data.map(({ id, title, images: { downsized_medium } }) => {\r\n    const { url: image } = downsized_medium;\r\n\r\n    return ({ id, title, image });\r\n  });\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, image }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={ image } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category, deleteCategoryById }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h3>Category: { category }</h3>\r\n\r\n        <div>\r\n          <button onClick={ () => deleteCategoryById(category) }>Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n      { loading && <p>Loading...</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(entity => (\r\n            <GifGridItem key={ entity.id }\r\n                         { ...entity }\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(data => {\r\n        setTimeout(() => {\r\n          setState({\r\n            data,\r\n            loading: false\r\n          });\r\n        }, 250);\r\n      })\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategory] = useState(['xmen']);\r\n\r\n  const deleteCategoryById = (category) => {\r\n    setCategory([...categories.filter((cat) => cat !== category)]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategory={ setCategory }/>\r\n      <hr/>\r\n\r\n      {\r\n        categories.map((category) => (\r\n          <GifGrid key={ category }\r\n                   category={ category }\r\n                   deleteCategoryById={ deleteCategoryById }\r\n          />\r\n        ))\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}